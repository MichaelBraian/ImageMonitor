rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check file size (limit to 50MB)
    function isValidSize() {
      return request.resource.size <= 50 * 1024 * 1024;
    }
    
    // Helper function to check image content type
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    // Helper function to check 3D model content type
    function isModel() {
      return request.resource.contentType.matches('model/.*') 
             || request.resource.contentType.matches('application/.*');
    }

    // Patient files rules
    match /patients/{patientId}/{folder}/{fileId} {
      // Allow read if user is authenticated and owns the patient data
      allow read: if isAuthenticated() 
                  && request.auth.uid == resource.metadata.dentistId;
      
      // Allow create with proper validation
      allow create: if isAuthenticated() 
                   && request.auth.uid == request.resource.metadata.dentistId
                   && isValidSize()
                   && (
                     (folder == "images" && isImage()) ||
                     (folder == "models" && isModel())
                   );
      
      // Allow update and delete if user owns the file
      allow update, delete: if isAuthenticated() 
                           && request.auth.uid == resource.metadata.dentistId;
    }
  }
}
